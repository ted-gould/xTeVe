name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24.1'
      - name: Install Node.js and TypeScript
        run: |
          sudo apt-get update
          sudo apt-get install -y npm
          sudo npm install -g typescript
      - name: Build project
        run: make build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24.1'
      - name: Install Node.js and TypeScript
        run: |
          sudo apt-get update
          sudo apt-get install -y npm
          sudo npm install -g typescript
      - name: Run tests
        run: make test
      # Add test steps here
      # For example:
      # - name: Run tests
      #   run: go test ./...

  lint:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24.1'
      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - name: Run golangci-lint
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          golangci-lint run
      # Add linting steps here
      # For example:
      # - name: Lint code
      #   run: golangci-lint run

  snap-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install snapcraft and lxd
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-kvm npm
          sudo npm install -g typescript
          sudo snap install snapcraft --classic
      - name: Build the snap
        run: sudo snapcraft --destructive-mode
      - name: Install the snap
        run: sudo snap install --dangerous xteve*.snap
      - name: Wait for service startup
        run: sleep 10
      - name: Check service status and dump logs
        run: |
          echo "--- Checking xteve service status ---"
          snap services xteve
          echo "--- Dumping xteve service logs ---"
          sudo snap logs xteve || echo "No logs yet or logs not accessible"
          echo "--- Verifying xteve service is active ---"
          snap services xteve | grep -E "^xteve\.xteve\s+.*active"

  e2e-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24.1'
      - name: Run E2E test
        run: go run cmd/ci-test/main.go
